#include <iostream>
using namespace std;

// 七夕快来了，Isabella要取出N个小球摆成一排，营造浪漫的氛围，有红球和白球，Isabella有独特的审美，要求红色球不能摆放在一起，例如”红白红白红“是OK的，而”红白红红白“是不可以的
// 红球白球个数不限，Isabella想知道一共有多少种摆放方式
// 输入一个整数N，输出小球所有摆放方案的个数
// 思路：将小球摆放的方案数看成是一个递推问题，假设f(n)表示n个小球的摆放方案数，那么f(n)=f(n-1)+f(n-2)，因为第n个小球有两种情况：
// 一种是和前面的小球一起摆放，这种情况下，前面的n-1个小球有f(n-1)种摆放方案；另一种是单独摆放，那么前面的n-2个小球有f(n-2)种摆放方案
// 所以，f(n)=f(n-1)+f(n-2)，这就是一个典型的动态规划问题
// 通过率 100%
int main()
{
	int n;
	cin >> n;
	int a = 1, b = 2, c;
	if (n == 1)
		c = 1;
	else if (n == 2)
		c = 2;
	else
	{
		for (int i = 3; i <= n; i++)
		{
			c = a + b;
			a = b;
			b = c;
		}
	}
	cout << c << endl;
	return 0;
}